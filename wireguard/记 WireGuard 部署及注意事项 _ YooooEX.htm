<!DOCTYPE html><html lang="zh-CN"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=2"><meta name="theme-color" content="#2E86C1"><meta name="generator" content="Hexo 4.2.0"><link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png"><link rel="icon" type="image/png" sizes="32x32" href="/favicon.ico"><link rel="icon" type="image/png" sizes="16x16" href="/favicon.ico"><link rel="mask-icon" href="/apple-touch-icon.png" color="#2E86C1"><link rel="manifest" href="/site.webmanifest"><link rel="stylesheet" href="/css/main.css"><link rel="stylesheet" href="/lib/font-awesome/css/font-awesome.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/pace-js@1/themes/blue/pace-theme-minimal.css"><script src="//cdn.jsdelivr.net/npm/pace-js@1/pace.min.js"></script><script id="hexo-configurations">var NexT=window.NexT||{},CONFIG={hostname:"yooooex.com",root:"/",scheme:"Mist",version:"7.8.0",exturl:!1,sidebar:{position:"right",display:"post",padding:18,offset:12,onmobile:!1},copycode:{enable:!0,show_result:!0,style:"default"},back2top:{enable:!0,sidebar:!1,scrollpercent:!0},bookmark:{enable:!1,color:"#222",save:"auto"},fancybox:!1,mediumzoom:!0,lazyload:!0,pangu:!1,comments:{style:"tabs",active:"disqusjs",storage:!0,lazyload:!1,nav:null,activeClass:"disqusjs"},algolia:{hits:{per_page:10},labels:{input_placeholder:"Search for Posts",hits_empty:"We didn't find any results for the search: ${query}",hits_stats:"${hits} results found in ${time} ms"}},localsearch:{enable:!1,trigger:"auto",top_n_per_article:1,unescape:!1,preload:!1},motion:{enable:!0,async:!1,transition:{post_block:"fadeIn",post_header:"slideDownIn",post_body:"slideDownIn",coll_header:"slideLeftIn",sidebar:"slideUpIn"}}}</script><meta name="description" content="接上一篇 斐讯 N1 -&gt; Armbian 后, 我往上面丢了一些服务(Gitea, vlmcsd喂, Transmission 等). 玩了一阵后我就因为别的事情搁置了最开始的目的 - 跳板, 直到四月份回坑 Apex Legends 后才因为联通的外网想起这台小机器.接下来就开始填坑吧选型PPTP&#x2F;L2TP&#x2F;IPSEC&#x2F;SSTP这些就很烦,不怎么想搞OpenVPN&#x2F;Softether其实"><meta property="og:type" content="article"><meta property="og:title" content="记 WireGuard 部署及注意事项"><meta property="og:url" content="https://yooooex.com/2019/05/23/wireguard-deploy/index.html"><meta property="og:site_name" content="YooooEX"><meta property="og:description" content="接上一篇 斐讯 N1 -&gt; Armbian 后, 我往上面丢了一些服务(Gitea, vlmcsd喂, Transmission 等). 玩了一阵后我就因为别的事情搁置了最开始的目的 - 跳板, 直到四月份回坑 Apex Legends 后才因为联通的外网想起这台小机器.接下来就开始填坑吧选型PPTP&#x2F;L2TP&#x2F;IPSEC&#x2F;SSTP这些就很烦,不怎么想搞OpenVPN&#x2F;Softether其实"><meta property="og:locale" content="zh_CN"><meta property="og:image" content="https://yooooex.com/imgs/2019/05/23/img-1.jpg"><meta property="og:image" content="https://yooooex.com/imgs/2019/05/23/tunsafe-1.png"><meta property="og:image" content="https://yooooex.com/imgs/2019/05/23/tunsafe-2.png"><meta property="og:image" content="https://yooooex.com/imgs/2019/05/23/tunsafe-3.png"><meta property="og:image" content="https://yooooex.com/imgs/2019/05/23/tunsafe-4.png"><meta property="og:image" content="https://yooooex.com/imgs/2019/05/23/img-2.jpg"><meta property="og:image" content="https://yooooex.com/imgs/2019/05/23/img-2.jpg"><meta property="og:image" content="https://yooooex.com/imgs/2019/05/23/img-3.gif"><meta property="og:image" content="https://yooooex.com/imgs/2019/05/23/tunsafe-result.png"><meta property="article:published_time" content="2019-05-23T09:31:15.000Z"><meta property="article:modified_time" content="2019-05-23T09:54:33.000Z"><meta property="article:author" content="YooooEX"><meta property="article:tag" content="Linux"><meta property="article:tag" content="Armbian"><meta property="article:tag" content="WireGuard"><meta property="article:tag" content="TunSafe"><meta name="twitter:card" content="summary"><meta name="twitter:image" content="https://yooooex.com/imgs/2019/05/23/img-1.jpg"><link rel="canonical" href="https://yooooex.com/2019/05/23/wireguard-deploy/"><script id="page-configurations">CONFIG.page={sidebar:"",isHome:!1,isPost:!0,lang:"zh-CN"}</script><title>记 WireGuard 部署及注意事项 | YooooEX</title><script async src="https://www.googletagmanager.com/gtag/js?id=UA-78246580-1"></script><script>function gtag(){dataLayer.push(arguments)}CONFIG.hostname===location.hostname&&(window.dataLayer=window.dataLayer||[],gtag("js",new Date),gtag("config","UA-78246580-1"))</script><noscript><style>.sidebar-inner,.use-motion .brand,.use-motion .collection-header,.use-motion .comments,.use-motion .menu-item,.use-motion .pagination,.use-motion .post-block,.use-motion .post-body,.use-motion .post-header{opacity:initial}.use-motion .site-subtitle,.use-motion .site-title{opacity:initial;top:initial}.use-motion .logo-line-before i{left:initial}.use-motion .logo-line-after i{right:initial}</style></noscript><link rel="alternate" href="/rss.xml" title="YooooEX" type="application/atom+xml"></head><body itemscope itemtype="http://schema.org/WebPage"><div class="container use-motion"><div class="headband"></div><header class="header" itemscope itemtype="http://schema.org/WPHeader"><div class="header-inner"><div class="site-brand-container"><div class="site-nav-toggle"><div class="toggle" aria-label="切换导航栏"><span class="toggle-line toggle-line-first"></span> <span class="toggle-line toggle-line-middle"></span> <span class="toggle-line toggle-line-last"></span></div></div><div class="site-meta"><a href="/" class="brand" rel="start"><span class="logo-line-before"><i></i></span><h1 class="site-title">YooooEX</h1><span class="logo-line-after"><i></i></span></a><p class="site-subtitle" itemprop="description">Yoooo</p></div><div class="site-nav-right"><div class="toggle popup-trigger"></div></div></div><nav class="site-nav"><ul id="menu" class="menu"><li class="menu-item menu-item-home"><a href="/" rel="section"><i class="fa fa-fw fa-home"></i>首页</a></li><li class="menu-item menu-item-categories"><a href="/categories/" rel="section"><i class="fa fa-fw fa-th"></i>分类</a></li><li class="menu-item menu-item-tags"><a href="/tags/" rel="section"><i class="fa fa-fw fa-tags"></i>标签</a></li><li class="menu-item menu-item-archives"><a href="/archives/" rel="section"><i class="fa fa-fw fa-archive"></i>归档</a></li><li class="menu-item menu-item-about"><a href="/about/" rel="section"><i class="fa fa-fw fa-user"></i>关于</a></li></ul></nav></div></header><div class="back-to-top"><i class="fa fa-arrow-up"></i> <span>0%</span></div><main class="main"><div class="main-inner"><div class="content-wrap"><div class="content post posts-expand"><article itemscope itemtype="http://schema.org/Article" class="post-block" lang="zh-CN"><link itemprop="mainEntityOfPage" href="https://yooooex.com/2019/05/23/wireguard-deploy/"><span hidden itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="image" content="https://yooooex.com/imgs/avatar.jpg"><meta itemprop="name" content="YooooEX"><meta itemprop="description" content="YooooEX的小站"></span><span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization"><meta itemprop="name" content="YooooEX"></span><header class="post-header"><h1 class="post-title" itemprop="name headline">记 WireGuard 部署及注意事项</h1><div class="post-meta"><span class="post-meta-item"><span class="post-meta-item-icon"><i class="fa fa-calendar-o"></i> </span><span class="post-meta-item-text">发表于</span> <time title="创建时间：2019-05-23 17:31:15 / 修改时间：17:54:33" itemprop="dateCreated datePublished" datetime="2019-05-23T17:31:15+08:00">2019-05-23</time> </span><span class="post-meta-item"><span class="post-meta-item-icon"><i class="fa fa-folder-o"></i> </span><span class="post-meta-item-text">分类于</span> <span itemprop="about" itemscope itemtype="http://schema.org/Thing"><a href="/categories/%E6%97%A5%E5%BF%97/" itemprop="url" rel="index"><span itemprop="name">日志</span></a> </span></span><span id="/2019/05/23/wireguard-deploy/" class="post-meta-item leancloud_visitors" data-flag-title="记 WireGuard 部署及注意事项" title="阅读次数"><span class="post-meta-item-icon"><i class="fa fa-eye"></i> </span><span class="post-meta-item-text">阅读次数：</span> <span class="leancloud-visitors-count"></span></span><br><span class="post-meta-item" title="本文字数"><span class="post-meta-item-icon"><i class="fa fa-file-word-o"></i> </span><span class="post-meta-item-text">本文字数：</span> <span>6.6k</span> </span><span class="post-meta-item" title="阅读时长"><span class="post-meta-item-icon"><i class="fa fa-clock-o"></i> </span><span class="post-meta-item-text">阅读时长 &asymp;</span> <span>6 分钟</span></span></div></header><div class="post-body" itemprop="articleBody"><p>接上一篇 <a href="https://yooooex.com/2019/01/28/n1-armbian/">斐讯 N1 -&gt; Armbian</a> 后, 我往上面丢了一些服务(<code>Gitea</code>, <del><code>vlmcsd</code>喂</del>, <code>Transmission</code> 等). 玩了一阵后我就因为别的事情搁置了最开始的目的 - 跳板, 直到四月份回坑 Apex Legends 后才因为联通的外网想起这台小机器.</p><p>接下来就开始填坑吧<img data-src="https://yooooex.com/imgs/2019/05/23/img-1.jpg" alt="emoji"></p><h2 id="选型"><a href="#选型" class="headerlink" title="选型"></a>选型</h2><ul><li>PPTP/L2TP/IPSEC/SSTP</li></ul><p>这些就很烦,不怎么想搞</p><ul><li>OpenVPN/Softether</li></ul><p>其实我是想直接用 <code>Softether</code> 的, 毕竟服务端启动后就能用有 UI 的管理工具, 点点点就搞好了.</p><p>问题是我到现在都没找到 <code>ARM64</code> 的预编译文件(官方不支持此架构)…</p><ul><li>WireGuard</li></ul><p>新玩具 - 轻量/性能不差/IP 漫游/配置相对简单/未来会支持混淆</p><p>好了就你了, 开搞开搞</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p><em>下文中部分参数意义请查看下表</em></p><table><thead><tr><th>参数</th><th>意义</th></tr></thead><tbody><tr><td>server_private_key_value</td><td>服务器私钥</td></tr><tr><td>server_public_key_value</td><td>服务器公钥</td></tr><tr><td>client_private_key_value</td><td>客户端私钥</td></tr><tr><td>client_public_key_value</td><td>客户端公钥</td></tr></tbody></table><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>去 <a href="https://www.wireguard.com/install/" target="_blank" rel="noopener">WireGuard 官网</a> 安装对应系统的版本, 你也可以下源码自己编译, 有现成的我一般都不会自己编译(哈哈).</p><p>以 <code>Armbian</code> (<code>Debian</code> or <code>Ubuntu</code>) 为例:</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"deb http://deb.debian.org/debian/ unstable main"</span> &gt; /etc/apt/sources.list.d/unstable.list</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> <span class="string">'Package: *\nPin: release a=unstable\nPin-Priority: 90\n'</span> &gt; /etc/apt/preferences.d/<span class="built_in">limit</span>-unstable</span><br><span class="line"></span><br><span class="line">apt update</span><br><span class="line"></span><br><span class="line">apt install wireguard</span><br></pre></td></tr></table></figure><p>看看装好了没有</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># lsmod | grep wireguard</span></span><br><span class="line"><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="691b06061d293a44281b040b000807">[email&#160;protected]</a>:~<span class="comment"># lsmod | grep wireguard</span></span><br><span class="line"></span><br><span class="line">wireguard             155648  0</span><br><span class="line">ip6_udp_tunnel         16384  1 wireguard</span><br><span class="line">udp_tunnel             16384  1 wireguard</span><br><span class="line">ipv6                  487424  42 nf_nat_ipv6,wireguard</span><br><span class="line"></span><br><span class="line"><span class="comment"># dpkg -l | grep wireguard</span></span><br><span class="line"><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="93e1fcfce7d3c0bed2e1fef1faf2fd">[email&#160;protected]</a>:~<span class="comment"># dpkg -l | grep wireguard</span></span><br><span class="line"></span><br><span class="line">ii  wireguard                       0.0.20190406-1                 all         fast, modern, secure kernel VPN tunnel (metapackage)</span><br><span class="line">ii  wireguard-dkms                  0.0.20190406-1                 all         fast, modern, secure kernel VPN tunnel (DKMS version)</span><br><span class="line">ii  wireguard-tools                 0.0.20190406-1                 arm64       fast, modern, secure kernel VPN tunnel (userland utilities)</span><br></pre></td></tr></table></figure><p>这就装完了, 就下来就是配置了.</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li>生成公私钥</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wg genkey | tee privatekey | wg pubkey &gt; publickey</span><br></pre></td></tr></table></figure><p><em>服务器私钥存好, 丢了就要把所有客户端的配置收回来了.</em></p><h4 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h4><ul><li>开启端口转发</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开转发</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"net.ipv4.ip_forward = 1"</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用规则</span></span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><ul><li>看下要连外网的网卡是哪个</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip addr</span></span><br><span class="line"></span><br><span class="line"><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="31435e5e4571621c70435c5358505f">[email&#160;protected]</a>:~<span class="comment"># ip addr</span></span><br><span class="line"></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether <span class="comment">##:##:##:##:##:## brd ff:ff:ff:ff:ff:ff</span></span><br><span class="line">    inet <span class="comment">#.#.#.#/24 brd #.#.#.# scope global dynamic eth0</span></span><br><span class="line">       valid_lft 71134sec preferred_lft 71134sec</span><br><span class="line">    inet6 ffff::f/64 scope global noprefixroute dynamic</span><br><span class="line">       valid_lft 586sec preferred_lft 586sec</span><br><span class="line">    inet6 ffff::f/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: wlan0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast state DOWN group default qlen 1000</span><br><span class="line">    link/ether <span class="comment">##:##:##:##:##:## brd ff:ff:ff:ff:ff:ff</span></span><br></pre></td></tr></table></figure><p>这里可以看见我的外网网卡名称是 <code>eth0</code> , 这个记下来.</p><ul><li>建配置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 目录不存在时就给它建个</span></span><br><span class="line"><span class="comment"># mkdir /etc/wireguard</span></span><br><span class="line">vim /etc/wireguard/wg0.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[Interface]</span><br><span class="line"><span class="comment"># 服务器私钥, 就是上面生成的 privatekey</span></span><br><span class="line">PrivateKey = server_private_key_value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绑定地址</span></span><br><span class="line">Address = 10.0.0.1/24</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否保存配置, 可以在运行中通过命令行添加新客户端, 并保存到此配置</span></span><br><span class="line">SaveConfig = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动动作, 这里就要把 eth0 替换成之前记下的外网网卡名称 , wg0 是等下创建的虚拟网卡名称</span></span><br><span class="line"><span class="comment"># 配置防火墙规则</span></span><br><span class="line">PostUp = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE; ip6tables -A FORWARD -i wg0 -j ACCEPT; ip6tables -A FORWARD -o wg0 -j ACCEPT; ip6tables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭动作, 操作同上</span></span><br><span class="line">PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE; ip6tables -D FORWARD -i wg0 -j ACCEPT; ip6tables -t nat -D POSTROUTING -o eth0 -j MASQUERADE</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监听端口</span></span><br><span class="line">ListenPort = 56660</span><br><span class="line"></span><br><span class="line"><span class="comment"># 客户端配置</span></span><br><span class="line">[Peer]</span><br><span class="line"><span class="comment"># 客户端公钥, 生成步骤同服务器, 两端都可生成</span></span><br><span class="line">PublicKey = client_public_key_value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分配给客户端的地址, 我这里让他随便选, 你也可以指定给他</span></span><br><span class="line">AllowedIPs = 10.0.0.0/24</span><br><span class="line"><span class="comment">#AllowedIPs = 10.0.0.2/32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加客户端就在 Peer 节点下加公钥和 IP 就可以了, 操作同上</span></span><br></pre></td></tr></table></figure><ul><li>提权, 免得出问题</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 -R /etc/wireguard</span><br></pre></td></tr></table></figure><ul><li>测试启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wg-quick up wg0</span></span><br><span class="line"></span><br><span class="line"><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="bac8d5d5cefae997fbc8d7d8d3dbd4">[email&#160;protected]</a>:~<span class="comment"># wg-quick up wg0</span></span><br><span class="line"></span><br><span class="line">[<span class="comment">#] ip link add wg0 type wireguard</span></span><br><span class="line">[<span class="comment">#] wg setconf wg0 /dev/fd/63</span></span><br><span class="line">[<span class="comment">#] ip address add 10.0.0.1/24 dev wg0</span></span><br><span class="line">[<span class="comment">#] ip link set mtu 1420 up dev wg0</span></span><br><span class="line">[<span class="comment">#] iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE; ip6tables -A FORWARD -i wg0 -j ACCEPT; ip6tables -A FORWARD -o wg0 -j ACCEPT; ip6tables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># wg</span></span><br><span class="line"></span><br><span class="line"><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="176578786357443a56657a757e7679">[email&#160;protected]</a>:~<span class="comment"># wg</span></span><br><span class="line"></span><br><span class="line">interface: wg0</span><br><span class="line">   public key: server_public_key_value</span><br><span class="line">   private key: (hidden)</span><br><span class="line">   listening port: 56660</span><br><span class="line"> </span><br><span class="line">peer: client_public_key_value</span><br><span class="line">   endpoint: [ffff::f]:port</span><br><span class="line">   allowed ips: 10.0.0.0/24</span><br></pre></td></tr></table></figure><p>接下来就是配置客户端了</p><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><p>这里以 <code>Windows</code> 平台, 客户端 <code>TunSafe</code> 为例, 其他平台就不多讲了, 区别不大</p><ul><li>安装</li></ul><p>去 <a href="https://tunsafe.com/download" target="_blank" rel="noopener">TunSafe</a> 下载客户端和虚拟网卡驱动(TunSafe-TAP), 安装完成即可.</p><p><img data-src="https://yooooex.com/imgs/2019/05/23/tunsafe-1.png" alt="TunSafe 界面"></p><ul><li>配置</li></ul><p>点击 File - Generate Key Pair 来生成公私钥</p><p><img data-src="https://yooooex.com/imgs/2019/05/23/tunsafe-2.png" alt="TunSafe 选项 - 生成公私钥"></p><p><img data-src="https://yooooex.com/imgs/2019/05/23/tunsafe-3.png" alt="TunSafe 选项 - 生成公私钥 - 生成"></p><p>记下生成的公私钥, 点击 Edit Config ,开始配置.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[Interface]</span><br><span class="line"># 上文生成的客户端私钥</span><br><span class="line">PrivateKey &#x3D; client_private_key_value</span><br><span class="line"></span><br><span class="line"># 使用的 DNS 服务器</span><br><span class="line">DNS &#x3D; 114.114.114.114</span><br><span class="line"></span><br><span class="line"># 绑定地址</span><br><span class="line">Address &#x3D; 10.0.0.3&#x2F;24</span><br><span class="line"></span><br><span class="line">[Peer]</span><br><span class="line"># 上文生成的服务器公钥</span><br><span class="line">PublicKey &#x3D; server_public_key_value</span><br><span class="line"></span><br><span class="line"># 要代理的地址, 这里是全局代理, 可根据需求调整</span><br><span class="line">AllowedIPs &#x3D; 0.0.0.0&#x2F;0</span><br><span class="line"></span><br><span class="line"># 服务器地址</span><br><span class="line">Endpoint &#x3D; server_ip:port</span><br><span class="line"></span><br><span class="line"># 心跳包间隔时间</span><br><span class="line">PersistentKeepalive &#x3D; 25</span><br></pre></td></tr></table></figure><p>完事, 开始测试</p><ul><li>测试启动</li></ul><p>点击 Connect 测试</p><p><img data-src="https://yooooex.com/imgs/2019/05/23/tunsafe-4.png" alt="TunSafe 连接"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[user.DESKTOP-DEV] ➤ ping 10.0.0.1</span><br><span class="line"></span><br><span class="line">正在 Ping 10.0.0.1 具有 32 字节的数据:</span><br><span class="line">来自 10.0.0.1 的回复: 字节&#x3D;32 时间&#x3D;56ms TTL&#x3D;64</span><br><span class="line">来自 10.0.0.1 的回复: 字节&#x3D;32 时间&#x3D;78ms TTL&#x3D;64</span><br><span class="line">来自 10.0.0.1 的回复: 字节&#x3D;32 时间&#x3D;76ms TTL&#x3D;64</span><br><span class="line">来自 10.0.0.1 的回复: 字节&#x3D;32 时间&#x3D;52ms TTL&#x3D;64</span><br><span class="line"></span><br><span class="line">[user.DESKTOP-DEV] ➤ ping 114.114.114.114</span><br><span class="line"></span><br><span class="line">正在 Ping 114.114.114.114 具有 32 字节的数据:</span><br><span class="line">来自 114.114.114.114 的回复: 字节&#x3D;32 时间&#x3D;63ms TTL&#x3D;80</span><br><span class="line">来自 114.114.114.114 的回复: 字节&#x3D;32 时间&#x3D;78ms TTL&#x3D;66</span><br><span class="line">来自 114.114.114.114 的回复: 字节&#x3D;32 时间&#x3D;75ms TTL&#x3D;67</span><br><span class="line">来自 114.114.114.114 的回复: 字节&#x3D;32 时间&#x3D;59ms TTL&#x3D;87</span><br></pre></td></tr></table></figure><p>到这里就部署完毕了.</p><h3 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h3><ul><li>坑啊</li></ul><p>你以为到这就结束了? 接下来才是重点, 耗时一个月才解决的<del>血泪史</del>坑</p><p>连接成功后,我 <code>ping</code> 了服务器和外网, 都能正常连接, 我兴冲冲跑去 <a href="speedtest.net">Speedtest</a> 测试速度, 却发现所有网站都连接超时, 连路由的管理页面都上不去</p><p>于是开始检查, 防火墙和转发都配置了, <code>ssh</code> 没问题, <code>traceroute</code> 没问题, 还是不能上</p><p>这什么情况<img data-src="https://yooooex.com/imgs/2019/05/23/img-2.jpg" alt="emoji"></p><p>妈耶, 搞不定啊, 放狗!</p><p>于是就断断续续搜索了一个月(你没看错, 是一个月, 这篇文章本来是要在四月发的<img data-src="https://yooooex.com/imgs/2019/05/23/img-2.jpg" alt="emoji">), 还是没找到头绪.</p><p>反反复复配置, 问题依然存在</p><p>我差点都认命去装 <code>OpenVPN</code> 了, 这时脑子一抽, 想起以前瞎折腾给网卡开了巨型帧, 导致无法连接网络的情况, 会不会是 MTU 设置不正确导致出现碎片?</p><ul><li>调查</li></ul><p>赶紧连到小机器, 查看网卡情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip link</span></span><br><span class="line"></span><br><span class="line"><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="91e3fefee5d1c2bcd0e3fcf3f8f0ff">[email&#160;protected]</a>:~<span class="comment"># ip link</span></span><br><span class="line"></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000</span><br><span class="line">    link/ether ff:ff:ff:ff:ff:ff brd ff:ff:ff:ff:ff:ff</span><br><span class="line">3: wlan0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast state DOWN mode DORMANT group default qlen 1000</span><br><span class="line">    link/ether ff:ff:ff:ff:ff:ff brd ff:ff:ff:ff:ff:ff</span><br><span class="line">33: wg0: &lt;POINTOPOINT,NOARP,UP,LOWER_UP&gt; mtu 1420 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000</span><br><span class="line">    link/none</span><br></pre></td></tr></table></figure><p>这里可看到 <code>wg0</code> 的 <code>mtu</code> 是 1420, 编辑客户端配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Interface]</span><br><span class="line">PrivateKey &#x3D; client_private_key_value</span><br><span class="line"></span><br><span class="line">DNS &#x3D; 114.114.114.114</span><br><span class="line"></span><br><span class="line">Address &#x3D; 10.0.0.3&#x2F;24</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">MTU &#x3D; 1420</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">[Peer]</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>保存后重新连接, 问题依旧, 这到底是怎么肥事啊<img data-src="https://yooooex.com/imgs/2019/05/23/img-3.gif" alt="emoji"></p><p>不死心, 放狗搜索后找到了这个邮件列表: <a href="https://lists.zx2c4.com/pipermail/wireguard/2017-December/002201.html" target="_blank" rel="noopener">[WireGuard] Header / MTU sizes for Wireguard</a> , 里面提到了 <code>WireGuard</code> 协议的开销:</p><blockquote><p>The overhead of WireGuard breaks down as follows:</p><ul><li>20-byte IPv4 header or 40 byte IPv6 header</li><li>8-byte UDP header</li><li>4-byte type</li><li>4-byte key index</li><li>8-byte nonce</li><li>N-byte encrypted data</li><li>16-byte authentication tag</li></ul></blockquote><p>妈耶, 我看见曙光了!</p><ul><li>填坑</li></ul><p>赶紧去改配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Interface]</span><br><span class="line">PrivateKey &#x3D; client_private_key_value</span><br><span class="line"></span><br><span class="line">DNS &#x3D; 114.114.114.114</span><br><span class="line"></span><br><span class="line">Address &#x3D; 10.0.0.3&#x2F;24</span><br><span class="line">...</span><br><span class="line"># 这里按照最大开销计算, 实际的 mtu 为 1420 - (40 + 8 + 4 + 4 + 8 + 16) &#x3D; 1344</span><br><span class="line"># 我怕有坑, 再给点余量</span><br><span class="line">MTU &#x3D; 1300</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">[Peer]</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>保存 -&gt; 重新连接 -&gt; <a href="speedtest.net">Speedtest</a></p><p><img data-src="https://yooooex.com/imgs/2019/05/23/tunsafe-result.png" alt="速度"></p><p>好了, 坑填上了, Apex Legneds 启动!</p><p>以下是一些参考链接, 供有意者研究(多看文档少踩坑):</p><ul><li><a href="https://www.wireguard.com/protocol/" target="_blank" rel="noopener">协议总览</a></li><li><a href="https://www.wireguard.com/papers/wireguard.pdf" target="_blank" rel="noopener">白皮书</a></li></ul></div><div><ul class="post-copyright"><li class="post-copyright-author"><strong>本文作者： </strong>YooooEX</li><li class="post-copyright-link"><strong>本文链接：</strong> <a href="https://yooooex.com/2019/05/23/wireguard-deploy/" title="记 WireGuard 部署及注意事项">https://yooooex.com/2019/05/23/wireguard-deploy/</a></li><li class="post-copyright-license"><strong>版权声明： </strong>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" rel="noopener" target="_blank"><i class="fa fa-fw fa-creative-commons"></i>BY-NC-SA</a> 许可协议。转载请注明出处！</li></ul></div><div class="followme"><p>欢迎关注我的其它发布渠道</p><div class="social-list"><div class="social-item"><a target="_blank" class="social-link" href="/rss.xml"><span class="icon"><i class="fa fa-rss"></i> </span><span class="label">RSS</span></a></div></div></div><footer class="post-footer"><div class="post-tags"><a href="/tags/Linux/" rel="tag"># Linux</a> <a href="/tags/Armbian/" rel="tag"># Armbian</a> <a href="/tags/WireGuard/" rel="tag"># WireGuard</a> <a href="/tags/TunSafe/" rel="tag"># TunSafe</a></div><div class="post-nav"><div class="post-nav-item"><a href="/2019/01/28/n1-armbian/" rel="prev" title="瞎折腾 - 斐讯 N1 变身 Armbian Linux 记录"><i class="fa fa-chevron-left"></i> 瞎折腾 - 斐讯 N1 变身 Armbian Linux 记录</a></div><div class="post-nav-item"><a href="/2020/05/19/prometheus-deploy-query/" rel="next" title="Prometheus 和 Pushgateway 部署及使用">Prometheus 和 Pushgateway 部署及使用 <i class="fa fa-chevron-right"></i></a></div></div></footer></article></div><div class="comments"><div id="disqus_thread"><noscript>Please enable JavaScript to view the comments powered by Disqus.</noscript></div></div><script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script>window.addEventListener('tabs:register', () => {
    let { activeClass } = CONFIG.comments;
    if (CONFIG.comments.storage) {
      activeClass = localStorage.getItem('comments_active') || activeClass;
    }
    if (activeClass) {
      let activeTab = document.querySelector(`a[href="#comment-${activeClass}"]`);
      if (activeTab) {
        activeTab.click();
      }
    }
  });
  if (CONFIG.comments.storage) {
    window.addEventListener('tabs:click', event => {
      if (!event.target.matches('.tabs-comment .tab-content .tab-pane')) return;
      let commentClass = event.target.classList[1];
      localStorage.setItem('comments_active', commentClass);
    });
  }</script></div><div class="toggle sidebar-toggle"><span class="toggle-line toggle-line-first"></span> <span class="toggle-line toggle-line-middle"></span> <span class="toggle-line toggle-line-last"></span></div><aside class="sidebar"><div class="sidebar-inner"><ul class="sidebar-nav motion-element"><li class="sidebar-nav-toc">文章目录</li><li class="sidebar-nav-overview">站点概览</li></ul><div class="post-toc-wrap sidebar-panel"><div class="post-toc motion-element"><ol class="nav"><li class="nav-item nav-level-2"><a class="nav-link" href="#选型"><span class="nav-number">1.</span> <span class="nav-text">选型</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#部署"><span class="nav-number">2.</span> <span class="nav-text">部署</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#安装"><span class="nav-number">2.1.</span> <span class="nav-text">安装</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#配置"><span class="nav-number">2.2.</span> <span class="nav-text">配置</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#服务器端"><span class="nav-number">2.2.1.</span> <span class="nav-text">服务器端</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#客户端"><span class="nav-number">2.2.2.</span> <span class="nav-text">客户端</span></a></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#坑"><span class="nav-number">2.3.</span> <span class="nav-text">坑</span></a></li></ol></li></ol></div></div><div class="site-overview-wrap sidebar-panel"><div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person"><img class="site-author-image" itemprop="image" alt="YooooEX" src="https://yooooex.com/imgs/avatar.jpg"><p class="site-author-name" itemprop="name">YooooEX</p><div class="site-description" itemprop="description">YooooEX的小站</div></div><div class="site-state-wrap motion-element"><nav class="site-state"><div class="site-state-item site-state-posts"><a href="/archives/"><span class="site-state-item-count">23</span> <span class="site-state-item-name">日志</span></a></div><div class="site-state-item site-state-categories"><a href="/categories/"><span class="site-state-item-count">2</span> <span class="site-state-item-name">分类</span></a></div><div class="site-state-item site-state-tags"><a href="/tags/"><span class="site-state-item-count">33</span> <span class="site-state-item-name">标签</span></a></div></nav></div><div class="links-of-author motion-element"><span class="links-of-author-item"><a href="https://github.com/YooooEX" title="GitHub → https:&#x2F;&#x2F;github.com&#x2F;YooooEX" rel="noopener" target="_blank"><i class="fa fa-fw fa-github"></i>GitHub</a> </span><span class="links-of-author-item"><a href="https://steamcommunity.com/id/AssWeCan/" title="Steam → https:&#x2F;&#x2F;steamcommunity.com&#x2F;id&#x2F;AssWeCan&#x2F;" rel="noopener" target="_blank"><i class="fa fa-fw fa-steam-square"></i>Steam</a> </span><span class="links-of-author-item"><a href="https://yooooex.com/rss.xml" title="RSS → https:&#x2F;&#x2F;yooooex.com&#x2F;rss.xml"><i class="fa fa-fw fa-rss"></i>RSS</a></span></div><div class="cc-license motion-element" itemprop="license"><a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" class="cc-opacity" rel="noopener" target="_blank"><img src="/images/cc-by-nc-sa.svg" alt="Creative Commons"></a></div></div></div></aside><div id="sidebar-dimmer"></div></div></main><footer class="footer"><div class="footer-inner"><div class="copyright">&copy; <span itemprop="copyrightYear">2020</span> <span class="with-love"><i class="fa fa-heart"></i> </span><span class="author" itemprop="copyrightHolder">YooooEX</span> <span class="post-meta-divider">|</span> <span class="post-meta-item-icon"><i class="fa fa-area-chart"></i> </span><span title="站点总字数">53k</span> <span class="post-meta-divider">|</span> <span class="post-meta-item-icon"><i class="fa fa-coffee"></i> </span><span title="站点阅读时长">48 分钟</span></div><div class="powered-by">由 <a href="https://hexo.io/" class="theme-link" rel="noopener" target="_blank">Hexo</a> & <a href="https://mist.theme-next.org/" class="theme-link" rel="noopener" target="_blank">NexT.Mist</a> 强力驱动</div><script>(function() {
    function leancloudSelector(url) {
      url = encodeURI(url);
      return document.getElementById(url).querySelector('.leancloud-visitors-count');
    }

    function addCount(Counter) {
      var visitors = document.querySelector('.leancloud_visitors');
      var url = decodeURI(visitors.id);
      var title = visitors.dataset.flagTitle;

      Counter('get', '/classes/Counter?where=' + encodeURIComponent(JSON.stringify({ url })))
        .then(response => response.json())
        .then(({ results }) => {
          if (results.length > 0) {
            var counter = results[0];
            leancloudSelector(url).innerText = counter.time + 1;
            Counter('put', '/classes/Counter/' + counter.objectId, { time: { '__op': 'Increment', 'amount': 1 } })
              .catch(error => {
                console.error('Failed to save visitor count', error);
              });
          } else {
              Counter('post', '/classes/Counter', { title, url, time: 1 })
                .then(response => response.json())
                .then(() => {
                  leancloudSelector(url).innerText = 1;
                })
                .catch(error => {
                  console.error('Failed to create', error);
                });
          }
        })
        .catch(error => {
          console.error('LeanCloud Counter Error', error);
        });
    }

    function showTime(Counter) {
      var visitors = document.querySelectorAll('.leancloud_visitors');
      var entries = [...visitors].map(element => {
        return decodeURI(element.id);
      });

      Counter('get', '/classes/Counter?where=' + encodeURIComponent(JSON.stringify({ url: { '$in': entries } })))
        .then(response => response.json())
        .then(({ results }) => {
          for (let url of entries) {
            let target = results.find(item => item.url === url);
            leancloudSelector(url).innerText = target ? target.time : 0;
          }
        })
        .catch(error => {
          console.error('LeanCloud Counter Error', error);
        });
    }

    let { app_id, app_key, server_url } = {"enable":true,"app_id":"YgSjccakx9xvNWxOcwkVjxBq-gzGzoHsz","app_key":"oajp5SHgK2roxywS4eL4gO4S","server_url":null,"security":false};
    function fetchData(api_server) {
      var Counter = (method, url, data) => {
        return fetch(`${api_server}/1.1${url}`, {
          method,
          headers: {
            'X-LC-Id'     : app_id,
            'X-LC-Key'    : app_key,
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });
      };
      if (CONFIG.page.isPost) {
        if (CONFIG.hostname !== location.hostname) return;
        addCount(Counter);
      } else if (document.querySelectorAll('.post-title-link').length >= 1) {
        showTime(Counter);
      }
    }

    let api_server = app_id.slice(-9) !== '-MdYXbMMI' ? server_url : `https://${app_id.slice(0, 8).toLowerCase()}.api.lncldglobal.com`;

    if (api_server) {
      fetchData(api_server);
    } else {
      fetch('https://app-router.leancloud.cn/2/route?appId=' + app_id)
        .then(response => response.json())
        .then(({ api_server }) => {
          fetchData('https://' + api_server);
        });
    }
  })();</script></div></footer></div><script src="/lib/anime.min.js"></script><script src="//cdn.jsdelivr.net/npm/medium-zoom@1/dist/medium-zoom.min.js"></script><script src="//cdn.jsdelivr.net/npm/lozad@1/dist/lozad.min.js"></script><script src="//cdn.jsdelivr.net/npm/velocity-animate@1/velocity.min.js"></script><script src="//cdn.jsdelivr.net/npm/velocity-animate@1/velocity.ui.min.js"></script><script src="/js/utils.js"></script><script src="/js/motion.js"></script><script src="/js/schemes/muse.js"></script><script src="/js/next-boot.js"></script><script>!function(){var t=document.createElement("script"),e=window.location.protocol.split(":")[0];t.src="https"===e?"https://zz.bdstatic.com/linksubmit/push.js":"http://push.zhanzhang.baidu.com/push.js";var s=document.getElementsByTagName("script")[0];s.parentNode.insertBefore(t,s)}()</script><script src="//cdn.jsdelivr.net/npm/quicklink@1/dist/quicklink.umd.js"></script><script>window.addEventListener('load', () => {
      quicklink({
        timeout : 3000,
        priority: true,
        ignores : [uri => uri.includes('#'),uri => uri === 'https://yooooex.com/2019/05/23/wireguard-deploy/',]
      });
      });</script><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/disqusjs@1/dist/disqusjs.css"><script>NexT.utils.loadComments(document.querySelector('#disqus_thread'), () => {
  NexT.utils.getScript('//cdn.jsdelivr.net/npm/disqusjs@1/dist/disqus.js', () => {
    window.dsqjs = new DisqusJS({
      api       : 'https://yooooex.com/disqus/' || 'https://disqus.com/api/',
      apikey    : 'nqL72hE3yUU7XP3AfUyRrpPIQAWpF5w4mZIw2cCR6pLpTAs0ywE7cM2obrBe4vEs',
      shortname : 'yooooex',
      url       : "https://yooooex.com/2019/05/23/wireguard-deploy/",
      identifier: "2019/05/23/wireguard-deploy/",
      title     : "记 WireGuard 部署及注意事项",
    });
  }, window.DisqusJS);
});</script></body></html>