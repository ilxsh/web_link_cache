<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="一、Stress是什么 stress是一个linux下的压力测试工具，专门为那些想要测试自己的系统，完全高负荷和监督这些设备运行的用户。 二、安装 将stress的安装包上传并解压到linux服务器的" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Linux压力测试软件Stress安装及使用指南 - 景木 - 博客园</title>
    <link rel="shortcut icon" href="//common.cnblogs.com/favicon.ico?v=20200522" type="image/x-icon" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    <link id="MainCss" rel="stylesheet" href="/skins/codinglife/bundle-codinglife.min.css?v=UeHyLv1TT2WTz4TwfUOiMoKNmtFvLUjUnIhFE2UmZ7I" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/codinglife/bundle-codinglife-mobile.min.css?v=XjHfryC9ctsatIZz1dHn7TsRIqmwz9c3aj_6SCfHSDM" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/jingmu/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/jingmu/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/jingmu/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=6bwfCY2e02dLOXNW99G2BHZkYFmw9QyYTWeJ-W-sudo"></script>
    <script>
        var currentBlogId = 372065;
        var currentBlogApp = 'jingmu';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'CodingLife';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/jingmu/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/jingmu/">景木</a>
</h1>
<h2>
It takes nothing to join the crowd,but takes everything to stand alone.
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/jingmu/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E6%99%AF%E6%9C%A8">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/jingmu/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
26&nbsp; </span>
<span id="stats_article_count">文章 - 
23&nbsp; </span>
<span id="stats-comment_count">评论 - 
0</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/jingmu/p/7645548.html">Linux压力测试软件Stress安装及使用指南</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body ">
    <p align="center"><strong>&nbsp;</strong></p>
<p>一、Stress是什么</p>
<p>stress是一个linux下的压力测试工具，专门为那些想要测试自己的系统，完全高负荷和监督这些设备运行的用户。</p>
<p>二、安装</p>
<p>将stress的安装包上传并解压到linux服务器的/usr/local/src路径下，解压命令为：tar &ndash;xzpvf stress_1.0.1.orig.tar.gz</p>
<p>进入解压后的stress-1.0.1文件夹，输入./configure进行配置，若配置失败，并打印&ldquo;no acceptable c compiler found in path&ldquo;，则表示无可用的GCC编译环境，输入yum &ndash;y install gcc自动下载安装。</p>
<p>配置完成后，依次输入</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>至此，stress就全部安装完成了，在命令行会打印stress安装成功的提示。</p>
<p>三、使用指南</p>
<p>首先需建立测试目录，供放置写磁盘的文件。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>stress各主用参数说明（-表示后接一个中划线，--表示后接2个中划线，均可用于stress后接参数，不同表达方式）：</p>
<p>-？</p>
<p>--help 显示帮助信息</p>
<p>--version 显示软件版本信息</p>
<p>-t secs:</p>
<p>--timeout secs指定运行多少秒</p>
<p>--backoff usecs 等待usecs微秒后才开始运行</p>
<p>-c forks:</p>
<p>--cpu forks 产生多个处理sqrt()函数的CPU进程</p>
<p>-m forks</p>
<p>--vm forks:产生多个处理malloc()内存分配函数的进程，后接进程数量</p>
<p>-i forks</p>
<p>--io forks:产生多个处理sync()函数的磁盘I/O进程</p>
<p>--vm-bytes bytes：指定内存的byte数，默认值是1</p>
<p>--vm-hang:表示malloc分配的内存多少时间后在free()释放掉</p>
<p>-d :</p>
<p>--hdd:写进程，写入固定大小，通过mkstemp()函数写入当前目录</p>
<p>--hdd-bytes bytes:指定写的byte数，默认1G</p>
<p>--hdd-noclean:不要将写入随机ascii数据的文件unlink，则写入的文件不删除，会保留在硬盘空间。</p>
<p>四、测试场景举例</p>
<ol>
<li>测试CPU负荷</li>
</ol>
<p>输入命令：stress &ndash;c 4</p>
<p>增加4个cpu进程，处理sqrt()函数函数，以提高系统CPU负荷</p>
<p>2、内存测试</p>
<p>输入命令：stress &ndash;i 4 &ndash;vm 10 &ndash;vm-bytes 1G &ndash;vm-hang 100 &ndash;timeout 100s</p>
<p>新增4个io进程，10个内存分配进程，每次分配大小1G，分配后不释放，测试100S</p>
<p>3、磁盘I/O测试</p>
<p>输入命令：stress &ndash;d 1 --hdd-bytes 3G</p>
<p>新增1个写进程，每次写3G文件块</p>
<p>4、硬盘测试（不删除）</p>
<p>输入命令：stress &ndash;i 1 &ndash;d 10 --hdd-bytes 3G &ndash;hdd-noclean</p>
<p>新增1个IO进程，10个写进程，每次写入3G文件块，且不清除，会逐步将硬盘耗尽。</p>
<p>五、linux下服务器性能监控</p>
<ol>
<li><strong>top</strong>监控整体使用情况</li>
</ol>
<p>各参数涵义如下：</p>
<p>load average:当前系统负载的平均值，后面的3个值分别为1分钟、5分钟、15分钟前进程的平均数。一般认为这个数超过CPU数目时，CPU将比较吃力地负载当前系统所包含的进程。</p>
<p>表示CPU的几个参数：</p>
<p>us：用户空间占用CPU百分比</p>
<p>sy：内核空间占用CPU百分比</p>
<p>ni：用户进程空间内改变过优先级的进程占用CPU百分比</p>
<p>id:空闲CPU百分比</p>
<p>wa：等待输入输出的cpu时间百分比</p>
<p>输入top后，按大写P，以CPU占用大小排序，按M，以内存占用大小排序</p>
<p>从应用程序的角度来看，可用内存=系统free memory+buffers+cached,其中buffers/cached是为了提高文件读取的性能，当应用程序要用到内存的时候，buffer/cached会很快地被回收</p>
<ol>
<li>服务器I/O读写负载评估</li>
</ol>
<p>先用<strong>top</strong>查看，wa的值标识I/O等待所占用的CPU时间的百分比，高于30%时I/O压力高。</p>
<p>再用<strong>iostat &ndash;x 1 10</strong>查看，如果没有该文件，要<strong>yum install systat</strong> 安装。查看%util,%idle,如果%util接近100%，说明产生的I/O请求太多，I/0系统已经满负荷，该磁盘可能存在瓶颈，%idle小于70%，I/0压力就比较大了，一般读取速度有较多的等待。</p>
<p>同时结合<strong>vmstat -1</strong>命令，查看b参数，表示等待资源的进程数，如等待I/O，内存等，如常时间&gt;1，则要关注。可评估i/o读写负载。</p>
<ol>
<li>其他系统日常管理</li>
</ol>
<p>查看系统的cpu数：<strong>cat /proc/cpu info</strong></p>
<p>监控系统状态，查看具体是哪里的压力：<strong>vmstat</strong></p>
<p>proc列显示进程相关信息</p>
<p>r表示运行和等待CPU时间片的进程数，如长期&gt;服务器CPU个数，说明CPU不够用了</p>
<p>swap表示内存交换情况</p>
<p>查看内存使用情况：<strong>free</strong></p>
<p>查看系统进程：<strong>ps aux</strong></p>
<p>打印网络连接状况：<strong>netstat &ndash;an</strong></p>
<p>打印当前系统启动哪些端口：<strong>netstat &ndash;lnp</strong></p>
<p>查看磁盘的使用情况和文件系统被挂载的位置：<strong>df &ndash;lh</strong></p>
<p><strong>&nbsp;</strong></p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2017-10-10 14:44</span>&nbsp;
<a href="https://www.cnblogs.com/jingmu/">景木</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=7645548" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(7645548);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 372065, cb_blogApp = 'jingmu', cb_blogUserGuid = '295f40b3-37e1-4bf1-601f-08d49c352df3';
    var cb_entryId = 7645548, cb_entryCreatedDate = '2017-10-10 14:44', cb_postType = 1; 
    loadViewCount(cb_entryId);
    loadSideColumnAd();
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;"></div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 景木
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>