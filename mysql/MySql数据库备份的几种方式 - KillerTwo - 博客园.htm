<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="mysqldump工具备份 备份整个数据库 $ mysqldump u root h host p dbname backdb.sql 备份数据库中的某个表 $ mysqldump u root h " />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>MySql数据库备份的几种方式 - KillerTwo - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    <link id="MainCss" rel="stylesheet" href="/skins/codinglife/bundle-codinglife.min.css?v=UeHyLv1TT2WTz4TwfUOiMoKNmtFvLUjUnIhFE2UmZ7I" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/codinglife/bundle-codinglife-mobile.min.css?v=XjHfryC9ctsatIZz1dHn7TsRIqmwz9c3aj_6SCfHSDM" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/yourblog/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/yourblog/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/yourblog/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=S7VT4E3Z1_UHjO32V_XnEuYu__6nRmKwvrZklcXiOWo"></script>
    <script>
        var currentBlogId = 397707;
        var currentBlogApp = 'yourblog';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'CodingLife';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/yourblog/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/yourblog/">KillerTwo</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/yourblog/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/KillerTwo">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/yourblog/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
19&nbsp; </span>
<span id="stats_article_count">文章 - 
2&nbsp; </span>
<span id="stats-comment_count">评论 - 
3</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/yourblog/p/10381962.html">MySql数据库备份的几种方式</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
    <h4 id="mysqldump工具备份">mysqldump工具备份</h4>
<p>备份整个数据库</p>
<pre><code>$&gt; mysqldump -u root -h host -p dbname &gt; backdb.sql
</code></pre>
<p>备份数据库中的某个表</p>
<pre><code>$&gt; mysqldump -u root -h host -p dbname tbname1, tbname2 &gt; backdb.sql
</code></pre>
<p>备份多个数据库</p>
<pre><code>$&gt; mysqldump -u root -h host -p --databases dbname1, dbname2 &gt; backdb.sql
</code></pre>
<p>备份系统中所有数据库</p>
<pre><code>$&gt; mysqldump -u root -h host -p --all-databases &gt; backdb.sql
</code></pre>
<h4 id="直接复制整个数据库目录对于innodb存储引擎不适用备份">直接复制整个数据库目录(对于InnoDB存储引擎不适用)备份</h4>
<p>windowns: installpath/mysql/data</p>
<p>linux: /var/lib/mysql</p>
<p>在复制前需要先执行如下命令：</p>
<pre><code>MYSQL&gt; LOCK TABLES;
# 在复制过程中允许客户继续查询表，
MYSQL&gt; FLUSH TABLES;
# 将激活的索引页写入硬盘。
</code></pre>
<h4 id="mysqlhotcopy工具备份">mysqlhotcopy工具备份</h4>
<p>备份数据库或表最快的途径，只能运行在数据库目录所在的机器上，并且只能备份MyISAM类型的表。</p>
<p>要使用该备份方法必须可以访问备份的表文件。</p>
<pre><code>$&gt; mysqlhotcopy -u root -p dbname /path/to/new_directory;
#将数据库复制到new_directory目录。
</code></pre>
<h4 id="mysql命令导入sql文件还原">mysql命令导入sql文件还原</h4>
<pre><code>$&gt; mysql -u root -p [dbname] &lt; backup.sql
# 执行前需要先创建dbname数据库，如果backup.sql是mysqldump创建的备份文件则执行是不需要dbname。
MYSQL&gt; source backup.sql;
# 执行source命令前需要先选择数据库。
</code></pre>
<h4 id="直接复制数据库目录还原">直接复制数据库目录还原</h4>
<p><strong>注： 该方式必须确保原数据库和待还原的数据库主版本号一致，并且只适用于MyISAM引擎的表。</strong></p>
<ol>
<li>关闭mysql服务。</li>
<li>将备份的文件或目录覆盖mysql的data目录。</li>
<li>启动mysql服务。</li>
<li>对于linux系统，复制完文件后需要将文件的用户和组更改为mysql运行的用户和组。</li>
</ol>
<h4 id="mysqlhotcopy快速恢复">mysqlhotcopy快速恢复</h4>
<p>停止mysql服务，将备份数据库文件复制到存放数据的位置（mysql的data文件夹），重先启动mysql服务即可(可能需要指定数据库文件的所有者)。</p>
<pre><code>$&gt; cp -R /usr/backup/test /usr/local/mysql/data
# 如果恢复的数据库已经存在，则使用DROP语句删除已经存在的数据库之后，恢复才能成功，还需要保证数据库版本兼容。
</code></pre>
<h4 id="相同版本数据库之间迁移">相同版本数据库之间迁移</h4>
<pre><code>$&gt; mysqldump -h www.abc.com -uroot -p password dbname | 
$&gt; mysqldump -h www.bcd.com -uroot -p password
# 将服务器www.abc.com的数据库dbname迁移到服务器www.bcd.com的相同版本数据库上。
</code></pre>
<h4 id="不同版本的mysql数据库之间的迁移">不同版本的mysql数据库之间的迁移</h4>
<p>备份原数据库。</p>
<p>卸载原数据库。</p>
<p>安装新数据库。</p>
<p>在新数据库中还原备份的数据库数据。</p>
<p>数据库用户访问信息需要备份mysql数据库。</p>
<p>默认字符集问题，MySQL4.x中使用latin1作为默认字符集，mysql5.x使用utf8作为默认字符集。如果有中文数据需要对默认字符集进行更改。</p>
<p>不同数据库之间的迁移</p>
<p>MyODBC工具实现MySQL和SQL Server之间的迁移。</p>
<p>MySQL Migration Toolkit工具。</p>
<h4 id="表的导出和导入">表的导出和导入</h4>
<p>SELECT ...... INTO OUTFILE 导出文本文件,该方法只能导出到数据库服务器上，并且导出文件不能已存在。</p>
<pre><code>MYSQL&gt; SELECT ...... INTO OUTFILE filename [OPTIONS]
MYSQL&gt; SELECT * FROM test.person INTO OUTFILE &quot;C:\person0.txt&quot;;
# 将表person里的数据导入为文本文件person0.txt。
</code></pre>
<p>mysqldump文件导出文本文件(和INTO OUTFILE不一样的是该方法所有的选项不需要添加引号)</p>
<pre><code>$&gt; mysqldump -T path -u root -p dbname [tables] [OPTIONS]
# -T参数表明导出文本文件。path导出数据的目录。
$&gt; mysqldump -T C:\test person -u root -p
# 将test表中的person表导出到文本文件。执行成功后test目录下会有两个文件，person.sql和person.txt
</code></pre>
<p>mysql命令导出文本文件</p>
<pre><code>MYSQL&gt; mysql -u root -p --execute=&quot;SELECT * FROM person;&quot; test &gt; C:\person3.txt;
# 将test数据库中的person表数据导出到person3.txt文本文件中。--vartical参数可以将一行分为多行显示。
MYSQL&gt; mysql -u root -p --vartical --execute=&quot;SELECT * FROM person;&quot; test &gt; C:\person3.txt;
# --html将表导出为html文件，--xml文件将表导出为xml文件
</code></pre>
<p>LOAD DATA INFILE导入文本文件</p>
<pre><code>MYSQL&gt; LOAD DATA INFILE 'filename.txt' INTO TABLE tablename [OPTIONS] [IGNORE number LINES];
# [IGNORE number LINES]表示忽略行数
MYSQL&gt; LOAD DATA INFILE 'C:\person0.txt' INTO TABLE test.person;
</code></pre>
<p>mysqlimport导入文本文件</p>
<pre><code>$&gt; mysqlimport -u root -p dbname filename.txt [OPSTONS]
# 导入的表名有文件名决定，导入数据之前表必须存在
$&gt; mysqlimport -uroot -p test C:\backup\person.txt
# 将数据导入到test数据库的person表中。
</code></pre>
<h4 id="使用mysqlbinlog恢复数据">使用mysqlbinlog恢复数据</h4>
<pre><code>$&gt; mysqlbinlog [option] filename | mysql -u user -p password
# filename为二进制日志文件，
$&gt; mysqlbinlog --stop-date=&quot;2013-03-30 15:27:47&quot; D:\MySQL\log\binlog\binlog.000008 | mysql -u root -p password
# 根据日志文件binlog.000008将数据恢复到2013-03-30 15:27:47以前的操作。
</code></pre>
<h4 id="启动二进制日志">启动二进制日志</h4>
<pre><code>log-bin = path/filename	#日志文件存储目录和文件名
expire_log_days = 10	#日志自动删除时间
max_binlog_size = 100M	# 日志文件最大大小
</code></pre>
<h4 id="查看二进制日志">查看二进制日志</h4>
<pre><code>MYSQL&gt; SHOW VARIABLES LIKE 'log_%';
MYSQL&gt; SHOW BINARY LOGS;
$&gt; mysqlbinlog filename
# filename为二进制日志文件名。
</code></pre>
<h4 id="删除二进制日志">删除二进制日志</h4>
<pre><code>MYSQL&gt; RESET MASTER; #删除所有二进制日志
MYSQL&gt; PURGE {MASTER | BINARY} LOGS TO 'log_name';	#删除文件编号小于log_name编号的文件
MYSQL&gt; PURGE {MASTER | BINARY} LOGS BEFORE 'date';	#删除指定日期以前的文件
</code></pre>
<h4 id="暂时停止二进制日志（不需要重启mysql服务）">暂时停止二进制日志（不需要重启mysql服务）</h4>
<pre><code>MYSQL&gt; SET sql_log_bin = {0|1}	#暂停或启动二进制日志。</code></pre>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2019-02-15 10:05</span>&nbsp;
<a href="https://www.cnblogs.com/yourblog/">KillerTwo</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10381962" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(10381962);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 397707, cb_blogApp = 'yourblog', cb_blogUserGuid = '9b9ee5a8-aaf8-e511-9fc1-ac853d9f53cc';
    var cb_entryId = 10381962, cb_entryCreatedDate = '2019-02-15 10:05', cb_postType = 1; 
    loadViewCount(cb_entryId);
    loadSideColumnAd();
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 KillerTwo
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>