<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="字符串的拆分 前言 字符串的处理是每种语言经常会遇到的问题，tcl作为一门脚本语言自然也不例外，关于字符串的拆分，一般会有两种情况：1.使用单个字符拆分，2.使用字符串拆分。 1.使用单个字符拆分字符" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Tcl/Tk语言学习------拆分字符串 - RookieSky - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.ico?v=20200522" type="image/x-icon" />
    
    <link rel="stylesheet" href="https://www.cnblogs.com/css/blog-common.min.css" />
    <link id="MainCss" rel="stylesheet" href="https://www.cnblogs.com/skins/rivercast/bundle-rivercast.min.css" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="https://www.cnblogs.com/skins/rivercast/bundle-rivercast-mobile.min.css" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/RookieSky/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/RookieSky/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/RookieSky/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="https://www.cnblogs.com/js/blog-common.min.js"></script>
    <script>
        var currentBlogId = 520151;
        var currentBlogApp = 'RookieSky';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'rivercast';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    <!--done-->
<div id="centerbody" align="center">
<div id="header">
	
<!--done-->
<div class="header">
	<div class="headerText">
		<a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/RookieSky/">RookieSky</a>
<br>
		


	</div>
</div>


</div>
<div id="main">
<div id="mytopmenu">
	
	<div id="mylinks">

<a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
&nbsp;&nbsp;&nbsp;

<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/RookieSky/">
首页</a>
&nbsp;&nbsp;&nbsp;


<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
&nbsp;&nbsp;&nbsp;

<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/RookieSky">
联系</a>&nbsp;&nbsp;&nbsp;

<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/RookieSky/rss/">
订阅</a>
<a id="blog_nav_rss_image" href="https://www.cnblogs.com/RookieSky/rss/">
    <img src="/skins/rivercast/images/xml.gif" alt="订阅" />
</a>&nbsp;&nbsp;&nbsp;

<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>


</div>
		<DIV id="mystats">
			<!--done-->
<div class="blogStats">
posts - 
3,&nbsp;
comments - 
0,&nbsp;
trackbacks - 
0

</div>

</DIV>
	
</div>
<div id="centercontent">
	<div id="post_detail">
<!--done-->
<div class="post">
	<div class="postTitle">
		
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/RookieSky/p/10991394.html">
    <span>Tcl/Tk语言学习------拆分字符串</span>
    


</a>

	</div>
	
<div id="cnblogs_post_body" class="blogpost-body ">
    <p style="text-align: center;"><span style="font-size: 18pt;">字符串的拆分</span></p>
<p><span style="font-size: 14pt;"><strong>前言</strong></span></p>
<p>　　字符串的处理是每种语言经常会遇到的问题，tcl作为一门脚本语言自然也不例外，关于字符串的拆分，一般会有两种情况：1.使用单个字符拆分，2.使用字符串拆分。</p>
<p><span style="font-size: 14px;"><strong>1.使用单个字符拆分字符串</strong></span></p>
<p><span style="font-size: 14px;"><strong>　　<img src="https://img2018.cnblogs.com/blog/1708421/201906/1708421-20190608180026255-176295082.png" alt="" /></strong></span></p>
<p>&nbsp;</p>
<p>　　如图所示，使用单个字符可以轻松地分割字符串。</p>
<p><strong>2.使用字符串拆分字符串</strong></p>
<p>　　<img src="https://img2018.cnblogs.com/blog/1708421/201906/1708421-20190608180840357-667574235.png" alt="" /></p>
<p>　　当我们使用字符串拆分字符串，tcl会使用字符串中的每个字符来拆分，无法达到我们的目的。</p>
<p>　　这时我们可以定义一个快捷的方法来使用字符串拆分字符串，如下是我新建的一个split.tcl文件的内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">1</span> <span style="color: #000000;">proc OnePiece {str sep} {
</span><span style="color: #008080;">2</span>     split [<span style="color: #0000ff;">string</span> map [list $sep \<span style="color: #800080;">0</span>] $str ] \<span style="color: #800080;">0</span>
<span style="color: #008080;">3</span> <span style="color: #000000;">}
</span><span style="color: #008080;">4</span> <span style="color: #0000ff;">set</span><span style="color: #000000;"> a {RookieSky}
</span><span style="color: #008080;">5</span> <span style="color: #0000ff;">set</span><span style="color: #000000;"> b {ok}
</span><span style="color: #008080;">6</span> <span style="color: #0000ff;">set</span><span style="color: #000000;"> c [OnePiece $a $b]
</span><span style="color: #008080;">7</span> puts $c</pre>
</div>
<p>　　接下来我们执行一下这个文件：</p>
<p>　　<img src="https://img2018.cnblogs.com/blog/1708421/201906/1708421-20190608183853351-40883028.png" alt="" /></p>
<p>　　从结果中我们可以看出，我们已经成功地使用字符串&lsquo;ok&rsquo;来拆分&lsquo;RookieSky&rsquo;</p>
<p>　　NICE!!!</p>
<p><strong>原理</strong></p>
<p>　　1.<strong>split</strong>&nbsp;<em>string</em>&nbsp;?<em>splitChars</em>?</p>
<p>　　根据<em>splitChars</em>变元中的字符分解<em>string</em>，返回一个列表。每个列表元素由<em>string</em>中在<em>splitChars</em>字符之间的字符组成，如果<em>string</em>含有两个连续的字符与<em>splitChars</em>中的字符相同或者第一或最后一个字符为<em>splitChars</em>中的字符就返回一个空列表元素，如果<em>splitChars</em>是一个空字符串那么<em>string</em>的每一个字符作为单独的元素组成列表，缺省<em>splitChars</em>为空格符。</p>
<p>　　2.<strong>list</strong> ?<span class="hljs-keyword">value <span class="hljs-keyword">value &hellip;?</span></span></p>
<p>　　这个命令生成一个list，元素就是所有的value，TCL中list是由一组元素组成的有序集合，list可以嵌套定义，list的每个元素可以是任意字符串，也可以是list。</p>
<p>　　3.<strong>string map</strong>&nbsp;?-nocase? charMap&nbsp;<em>str</em></p>
<p><em>　　</em>返回根据 charMap 中输入、输出列表将 str 中的字符进行映射后而产生的新字符串，charMap这个列表中的值我们可以看成{key value key value ...}的映射，str中已经映射过的字符串不会重复映射。</p>
<p>　　由此我们可以理解为我们写的方法是将用来拆分的字符串和\0形成一个映射替换后，使用\0来进行拆分。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>　　</p>
<p>&nbsp;</p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
	<div class="postDesc">posted on 
<span id="post-date">2019-06-08 19:05</span>&nbsp;
<a href="https://www.cnblogs.com/RookieSky/">RookieSky</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10991394" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(10991394);return false;">收藏</a></div>
</div>


<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 520151, cb_blogApp = 'RookieSky', cb_blogUserGuid = '75339ad1-3ec1-44a2-14cf-08d6e92ebcfd';
    var cb_entryId = 10991394, cb_entryCreatedDate = '2019-06-08 19:05', cb_postType = 1; 
    loadViewCount(cb_entryId);
    loadSideColumnAd();
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async src="https://securepubads.g.doubleclick.net/tag/js/gpt.js"></script>
    <script>
        var mobileVisit = screen.width < 500;
        window.googletag = window.googletag || { cmd: [] };
        googletag.cmd.push(function () {
            googletag.defineSlot('/1090369/C1', [300, 250], 'div-gpt-ad-1592365906576-0').addService(googletag.pubads());
            if (!mobileVisit) {
                googletag.defineSlot('/1090369/C2', [468, 60], 'div-gpt-ad-1592366332455-0').addService(googletag.pubads());
            }
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'>
            <script>
                if (canShowAdsense()) {
                    googletag.cmd.push(function () { googletag.display('div-gpt-ad-1592365906576-0'); });
                }
                else {
                    $('#cnblogs_c1').hide();
                }
            </script>
        </div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'>
            <script>
                if (!mobileVisit) {
                    if (canShowAdsense()) {
                        googletag.cmd.push(function () { googletag.display('div-gpt-ad-1592366332455-0'); });
                    } else {
                        $('#cnblogs_c2').hide();
                    }
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div></div>


	<!--done-->
<div class="footer">
    Copyright &copy;  2020 RookieSky
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>
 Powered By: <a href="http://www.cnblogs.com">博客园</a>
</div>


</div>

<div id="leftcontent">
	
		<DIV id="leftcontentcontainer">
			<div id="calendar"><div id="blog-calendar" style="display:none"></div></div>                
                    <script>loadBlogDefaultCalendar();</script><br>
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script></DIV>
	
</div>

</div>

</div>


    
</body>
</html>
